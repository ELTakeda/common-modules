{#
/**
 * @file
 * Default theme implementation for displaying a view as a table.
 *
 * Available variables:
 * - attributes: Remaining HTML attributes for the element.
 *   - class: HTML classes that can be used to style contextually through CSS.
 * - title : The title of this group of rows.
 * - header: The table header columns.
 *   - attributes: Remaining HTML attributes for the element.
 *   - content: HTML classes to apply to each header cell, indexed by
 *   the header's key.
 * - caption_needed: Is the caption tag needed.
 * - caption: The caption for this table.
 * - accessibility_description: Extended description for the table details.
 * - accessibility_summary: Summary for the table details.
 * - responsive: Whether or not to use the .table-responsive wrapper.
 * - rows: Table row items. Rows are keyed by row number.
 *   - attributes: HTML classes to apply to each row.
 *   - columns: Row column items. Columns are keyed by column number.
 *     - attributes: HTML classes to apply to each column.
 *     - content: The column content.
 * - bordered: Flag indicating whether or not the table should be bordered.
 * - condensed: Flag indicating whether or not the table should be condensed.
 * - hover: Flag indicating whether or not table rows should be hoverable.
 * - striped: Flag indicating whether or not table rows should be striped.
 * - responsive: Flag indicating whether or not the table should be wrapped to
 *   be responsive (using the Bootstrap Framework .table-responsive wrapper).
 *
 * @ingroup templates
 *
 * @see template_preprocess_views_view_table()
 */
#}

{% set config_color = getSpotMeConfigColor() %}
{% if config_color %}
  {% include '@spotme_events/spotme-color-configuration.html.twig' with config_color %}
{% endif %}
{% if result|length > 0 %}
  {% set current_path = getCurrentPath() %}
  <div class="row">
    {% set current_user = getCurrentUser() %}
    {% for key, row in rows %}
      {% set entity = result[key]._entity %}

      {% set check_registed = checkRegisteredEvent(current_user, entity.nid.value) %}
      {% set check_user_can_register = checkUserCanRegistered(current_user) %}

      <div class="col-12 col-md-4 mt-4 carousel-item-col">
        <div class="event-item-wrapper">
          <a href="{{ path('entity.node.canonical', {'node': entity.nid.value}, {'query': {'destination': current_path}}) }}">
            {% if entity.field_event_thumbnail.target_id and entity.field_event_thumbnail.entity.uri.value is defined %}
              <img alt="{{ entity.title.value }}" src="{{ file_url(entity.field_event_thumbnail.entity.uri.value) }}" class="img-fluid">
            {% else %}
              <img alt="{{ entity.title.value }}" src="/modules/custom/spotme_events/image/blank.jpg" class="img-fluid">
            {% endif %}
          </a>
          <a href="{{ path('entity.node.canonical', {'node': entity.nid.value}, {'query': {'destination': current_path}}) }}">
            <p class="event-title">{{ entity.title.value }}</p>
          </a>
          <div class="start-at-wrapper">
            <img src="/modules/custom/spotme_events/image/calendar-10-24.png">
            <span>{{ entity.field_start_at.value|date('M d, Y') }}
              at
              {{ entity.field_start_at.value|date('H:i') }}</span>
          </div>
          {% if check_registed == '0' and entity.field_spot_me_event.value and check_user_can_register %}
            <a webinar-id="{{ entity.field_event_id.value }}" event-nid="{{ entity.nid.value }}" href="#" class="btn-event btn-register-event">Register Event</a>
          {% endif %}
        </div>
      </div>
    {% endfor %}
  </div>
  {% else %}
      <p>Please stay tuned for future events. In the meantime, we invite you to browse HemonClub.com for previous webinars and other materials.</p>
{% endif %}
